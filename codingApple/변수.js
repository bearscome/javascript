// 변수는 선언, 할당, 범위, 호이스팅에 따라 다르다.

// var 
// 1. 재 선언이 가능하다
// 2. 재 할당이 가능하다.
// 3. 범위는 함수 내부
var a = '';


// let
// 1. 재 선언이 불가능 하다. 
// 2. 재 할당이 가능하다.
// 3. 범위는 {} 내부
let b = '';

// const 
// 1. 재 선언이 불가능 하다.
// 2. 재 할당이 불가능 하다.
// 3. 범위는 {} 내부
const c = '';

// 오브젝트
// 1. const로 지정을 해도 내부 값은 변경이 가능하다.
// c.name = abc -> 왜냐하면 오브젝트를 재 할당하는게 아닌 값을 변경하는 것이기 때문이다.
// 오브젝트를 수정을 불가능하게 하고 싶다면 Object.freeze();를 쓰면 된다.

// 호이스팅
// 변수의 선언을 변수 범위 맨위로 끌고오는 현상
// 자바스크립트는 선언 후 할당 순서대로 진행한다.
// var name -> name = 30;

if(true) {
    var ifa = 1;
    var ifb = 2;
    if(true) {
        let ifb = 3;
        // let은 중가로에서 못나온다. 그래서 ifb = 2다.
        // if문 안에 있으니까 당연히 못나오지....
    }
    console.log(ifb);
}
